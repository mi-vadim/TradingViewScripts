//@version=5
//
// Title:   [MiV] StrategyDashboards
// Author:  MiVadim
// Date:    31-Oct-2023
// Version: v1
library("StrategyDashboards", true)

const color TABLE_BG_COLOR 		= color.new(color.black, 0)
const color TABLE_FONT_COLOR	= color.new(color.white, 0)
const color TABLE_SUCCESS_COLOR	= color.new(color.teal, 40)
const color TABLE_LOSS_COLOR	= color.new(color.rgb(171, 27, 27), 40)

initializeCalendar() => 
	calendar   = map.new<int, string>()
	calendar.put(0, "")
	calendar.put(1, "Jan")
	calendar.put(2, "Feb")
	calendar.put(3, "Mar")
	calendar.put(4, "Apr")
	calendar.put(5, "May")
	calendar.put(6, "Jun")
	calendar.put(7, "Jul")
	calendar.put(8, "Aug")
	calendar.put(9, "Sep")
	calendar.put(10, "Oct")
	calendar.put(11, "Nov")
	calendar.put(12, "Dec")
	calendar.put(13, "Year")

	calendar

export monthly(bool isShow) =>
	var array<float> monthPNL       = array.new_float(0)
	var array<int> monthTime        = array.new_int(0)
	var array<float> yearPNL        = array.new_float(0)
	var array<int> yearTime         = array.new_int(0)
	var table monthlyTable          = table(na)
	var float curMonthPnL           = 0.0
	var float curYearPnL            = 0.0
	var map<int, string> calendar	= initializeCalendar()

	eq = strategy.equity
    lastComputed = false
    isNewMonth = month(time) != month(time[1])
    isNewYear  = year(time)  != year(time[1])
    barPnL = eq / eq[1] - 1

	// Current Monthly P&L
    curMonthPnL := isNewMonth ? 0.0 : (1 + curMonthPnL[1]) * (1 + barPnL) - 1
    
    // Current Yearly P&L
    curYearPnL := isNewYear ? 0.0 : (1 + curYearPnL[1]) * (1 + barPnL) - 1

	if (not na(curMonthPnL[1]) and (isNewMonth or barstate.islastconfirmedhistory))
        if (lastComputed[1])
            array.pop(monthPNL)
            array.pop(monthTime)
            
        array.push(monthPNL, curMonthPnL[1])
        array.push(monthTime, time[1])
    
    if (not na(curYearPnL[1]) and (isNewYear or barstate.islastconfirmedhistory))
        if (lastComputed[1])
            array.pop(yearPNL)
            array.pop(yearTime)
            
        array.push(yearPNL , curYearPnL[1])
        array.push(yearTime, time[1])
    
    lastComputed := barstate.islastconfirmedhistory ? true : nz(lastComputed[1])  

	if barstate.islastconfirmedhistory and isShow
        monthlyTable      := table.new(position.bottom_right, columns = 14, rows = array.size(yearPNL) + 1, border_width = 1)
        
        for [key, value] in calendar
            table.cell(monthlyTable, key,  0, value,     bgcolor = TABLE_BG_COLOR, text_color = TABLE_FONT_COLOR)
        
        for yearI = 0 to array.size(yearPNL) - 1
            yearColor = array.get(yearPNL, yearI) > 0 ? TABLE_SUCCESS_COLOR : TABLE_LOSS_COLOR
            table.cell(monthlyTable, 0,  yearI + 1, str.tostring(year(array.get(yearTime, yearI))), bgcolor = TABLE_BG_COLOR, text_color = TABLE_FONT_COLOR)
            table.cell(monthlyTable, 13, yearI + 1, str.tostring(math.round(array.get(yearPNL, yearI) * 100, 2)), bgcolor = yearColor, text_color=TABLE_FONT_COLOR)

        for monthI = 0 to array.size(monthTime) - 1
            monthRow   = year(array.get(monthTime, monthI)) - year(array.get(yearTime, 0)) + 1
            monthCol   = month(array.get(monthTime, monthI)) 
            monthColor = array.get(monthPNL, monthI) > 0 ? TABLE_SUCCESS_COLOR : TABLE_LOSS_COLOR
            
            table.cell(monthlyTable, monthCol, monthRow, str.tostring(math.round(array.get(monthPNL, monthI) * 100, 2)), bgcolor = monthColor, text_color=TABLE_FONT_COLOR)

export total(bool isShow) =>
    var int winRow      = 0
    var int lossRow     = 0
    var int maxWinRow   = 0
    var int maxLossRow  = 0
    var table dashTable = table.new(position.top_right, 1, 15, border_width=1)
    
    newWin  = (strategy.wintrades > strategy.wintrades[1]) and (strategy.losstrades == strategy.losstrades[1]) and (strategy.eventrades == strategy.eventrades[1])
    newLoss = (strategy.wintrades == strategy.wintrades[1]) and (strategy.losstrades  > strategy.losstrades[1]) and (strategy.eventrades == strategy.eventrades[1])

    if newWin
        lossRow := 0
        winRow := winRow + 1
    
    if winRow > maxWinRow
        maxWinRow := winRow
        
    if newLoss
        winRow := 0
        lossRow := lossRow + 1
    
    if lossRow > maxLossRow
        maxLossRow := lossRow

   
    if barstate.islastconfirmedhistory and isShow
        profit              = (strategy.netprofit / strategy.initial_capital) * 100
        numOfDaysInStrategy = (strategy.opentrades.entry_time(0) - strategy.closedtrades.entry_time(0)) / (1000 * 3600 * 24)
        winRate             = (strategy.wintrades / strategy.closedtrades ) * 100
        startTime           = str.format("{0,date,long}", strategy.closedtrades.entry_time(0))
        endTime             = str.format("{0,date,long}", strategy.opentrades.entry_time(0))
        netProfit           = str.tostring(profit, '##.##') + "%"
        percentPerDay       = str.tostring(profit / numOfDaysInStrategy, '#########################.#####')+"%"
        percentProfitable   = str.tostring(winRate, '##.##') + "%"
        profitFactor        = str.tostring(strategy.grossprofit / strategy.grossloss,  '##.###')
        totalTrades         = str.tostring(strategy.closedtrades)
        winsInRow           = str.tostring(maxWinRow, '######')
        lossInRow           = str.tostring(maxLossRow, '######')

        table.cell(dashTable, 0, 0, "Start:" + "\n" + startTime, bgcolor = TABLE_BG_COLOR, text_color = TABLE_FONT_COLOR)
        table.cell(dashTable, 0, 1, "End:" + "\n" + endTime , bgcolor = TABLE_BG_COLOR, text_color = TABLE_FONT_COLOR)
        table.cell(dashTable, 0, 2, "Net Profit:" + "\n" + netProfit, bgcolor = profit > 0 ? TABLE_SUCCESS_COLOR : TABLE_LOSS_COLOR, text_color = TABLE_FONT_COLOR)
        table.cell(dashTable, 0, 3, "Percent Per Day" + "\n" + percentPerDay, bgcolor = profit > 0 ? TABLE_SUCCESS_COLOR : TABLE_LOSS_COLOR, text_color = TABLE_FONT_COLOR)
        table.cell(dashTable, 0, 4, "Percent Profitable:" + "\n" + percentProfitable, bgcolor = winRate < 50 ? TABLE_LOSS_COLOR : winRate < 75 ? #999900 : TABLE_SUCCESS_COLOR, text_color = TABLE_FONT_COLOR)
        table.cell(dashTable, 0, 5, "Profit Factor:" + "\n" + profitFactor, bgcolor = strategy.grossprofit > strategy.grossloss ? TABLE_SUCCESS_COLOR : TABLE_LOSS_COLOR, text_color = TABLE_FONT_COLOR)
        table.cell(dashTable, 0, 6, "Total Trades:" + "\n" + totalTrades, bgcolor = TABLE_BG_COLOR, text_color = TABLE_FONT_COLOR)
        table.cell(dashTable, 0, 7, "Wins In A Row:" + "\n" + winsInRow, bgcolor = TABLE_BG_COLOR, text_color = TABLE_FONT_COLOR)
        table.cell(dashTable, 0, 8, "Losses In A Row:" + "\n" + lossInRow, bgcolor = TABLE_BG_COLOR, text_color = TABLE_FONT_COLOR)


monthly(true)